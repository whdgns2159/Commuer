<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- aop, context네임스페이스 추가함 -->
 	<!--	[1] Aspect: 공통관심 빈  -->
 	<bean id="common" class="com.tis.ex01.CommonAspect"/>
 	
 	<!--  [2] Target: 핵심로직 빈 -->
 	<bean id="obj" class="com.tis.ex01.BizServiceImpl"/>
 	
 	<!--  [3] aop설정
 		aspect : Advice를 어떤 pointcut에 적용할 지 설정
 	 -->
 	<aop:config>
 		<aop:aspect ref="common">
 			<!-- 포인트컷 표현식 
 				:	execution(수식어패턴? 리턴타입 패키지패턴?이름패턴(파라미터패턴))
 						*  : 모든것이 올 수 있다.
 						.. : 0개 이상 올 수 있다.
 			-->
 			<!-- Pointcut -->
 			<aop:pointcut expression="execution(* com.tis.ex01.BizServiceImpl.insertData(..))"
 			 id="point1"/>
 			<!-- Advice -->
 			<!-- [1] 메소드 실행 전 호출 -->
 			<!-- <aop:before method="trace1" pointcut-ref="point1"/> -->
 			
 			<!-- [2] 메소드 실행 후 . 메소드가 정상적으로 실행 되는지 또는 예외를 발생 시키는지 여부에 상관없이
 				적용되는 Advice 정의-->
 			<!-- <aop:after method="trace2" pointcut-ref="point1"/> -->
 			
 			<!-- [3] 메소드가 '정상적' 으로 실행된 후에 적용되는 Advice를 정의 -->
 			<!-- <aop:after-returning method="trace3" pointcut-ref="point1" returning="result"/> -->
 			
 			<!-- [4] 메소드가 예외를 발생 시킬 때 적용되는 Advice  -->
 			<!-- <aop:after-throwing method="trace4" pointcut-ref="point1" throwing="ex"/> -->
 			
 			<!-- [5] 메소드 호출 이전, 이후, 예외발생 등 모든 시점에 적용 가능한 Advice를 정의  -->
 			<aop:around method="trace5" pointcut-ref="point1"/>
 		</aop:aspect>
 	</aop:config>
</beans>
