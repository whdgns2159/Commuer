<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="board.model.StarBoardMapper">
 
  	<!-- 칼럼과 VO객체의 명명이 다를경우 맵핑해준다. -->
 	<resultMap type="board" id="boardMap">
 		<id property="num" column="star_b_num"/>
 		<result property="subject" column="subject"/>
 		<result property="content" column="content"/>
 		<result property="id" column="id"/>
 		<result property="hits" column="hits"/>
 		<result property="likes" column="likes"/>
 		<result property="date" column="wdate"/>
 	</resultMap>
 	
 	<resultMap type="reply" id="replyMap">
 		<id property="ReplyNum" column="star_b_r_num"/>
 		<result property="ArticleNum" column="star_b_num"/>
 		<result property="id" column="id"/>
 		<result property="content" column="content"/>
 		<result property="wdate" column="wdate"/>
 	</resultMap>
 <!-- 게시판의 글목록을 불러오는 sql문 -->
 	<select id="boardContent" parameterType="Map" resultMap="boardMap">
 		<!-- select star_b_num, subject, content, id, hits, likes, wdate  
 		from star_board order by 1 desc  -->
 		select *  from(select rownum rn, a.* 
 							 from(select star_b_num, subject, content, id, hits, likes, wdate from star_board order by star_b_num desc) a )
 					where rn between #{start} and #{end}
 	</select>
 	
 	<!-- 선택한 게시글의 내용을 불러오는 sql문 -->
 	<select id="getArticle" parameterType="_int" resultMap="boardMap">
 		select star_b_num, subject, content, id, hits, likes, wdate  
 		from star_board where star_b_num=#{num}
 	</select>
 	<!-- 게시판에 글을 쓰는 sql문 -->
 	<insert id="articleWrite" parameterType="board">
 		insert into star_board values(
 			star_board_seq.nextval,
 			#{subject},
 			#{content},
 			#{id},
 			#{hits},
 			#{likes},
 			sysdate
 		)
 	</insert>
 	<!-- 게시글 삭제하는 sql문 -->
 	<delete id="delArticle">
 		delete from star_board where star_b_num=#{num}
 	</delete>
 	<!-- 조회수 증가 -->
 	<update id="increaseHits" parameterType="_int">
 		update star_board set hits= hits+1 where star_b_num=#{num}
 	</update>
 	<!-- 총 게시글수 가져오기 -->
 	<select id="articleCount" resultType="_int">
 		select count(star_b_num) cnt from star_board
 	</select>
 	<!-- 검색어 처리 -->
 	<select id="keywordSearch" parameterType="Map" resultMap="boardMap">
 		select *  from(select rownum rn, a.* 
						 from(select star_b_num, subject, content, id, hits, likes, wdate 
							 from star_board 
							 where subject like '%'||#{keyword}||'%' 
							 or content like '%'||#{keyword}||'%' 
							 order by star_b_num desc)  a
						 )
 					where rn between #{start} and #{end}
 	</select>
 	
 	<select id="getKeywordCount" parameterType="string" resultType="int">
 		select count(star_b_num) cnt from star_board where subject like '%'||#{keyword}||'%'
 	</select>
 	<!-- =============================================== -->
 	<!-- 리플을 작성하는 sql문 -->
 	<insert id="subReply" parameterType="reply" >
 		insert into star_board_reply values(
 			star_board_reply_seq.nextval,
 			#{ArticleNum},
 			#{id},
 			#{content},
 			sysdate
 		)
 	</insert>
 	<!-- 리플을 볼러오는 sql문 -->
 	<select id="getReply" parameterType="_int" resultMap="replyMap">
 		select star_b_r_num, star_b_num, id, content, wdate from star_board_reply where star_b_num=#{num} 
 	</select>
 	<!-- 리플총 갯수 -->
 	<select id="totalReply" parameterType="_int" resultType="_int">
 		select count(star_b_num) from star_board_reply where star_b_num = #{num}
 	</select>
 	
 </mapper>