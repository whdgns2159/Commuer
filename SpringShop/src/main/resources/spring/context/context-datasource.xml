<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- context, mybatis-spring네임스페이스 추가됨 -->
	
	<!--[1] DataSource 등록  -->
	<!--(1) DriverManagerDataSource빈을 이용하는 방법-->
	
		<bean id="dataSource"
		 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		 <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		 <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
		 <property name="username" value="myshop"/>
		 <property name="password" value="tiger"/>
		</bean>
		
	<!--  (2) JNDI 사용하는 방법: Tomcat서버에 등록된 DataSource를 찾아
				빈으로 등록하는 방법-->

	<bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/oracle/myshop"/> </bean>
		  
	<!-- (3) HikariCP 커넥션풀을 이용하는 방법  [교재 176p]-->
		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
			<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:XE"/>
			<property name="username" value="myshop"/>
		 	<property name="password" value="tiger"/>
		</bean>	  
		<bean id="dataSource_hikari" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg ref="hikariConfig"/>
		</bean>
		
		
	<!--[2] SqlSessionFactoryBean 등록 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_hikari"/>
		<property name="configLocation" value="classpath:spring/config/mybatis-config.xml"/>
	</bean>
	
	<!--[3] SqlSessionTemplate 등록  -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!--[4] mybatis-spring:scan 설정 이걸 설정해줘야 mapper를 dao없이 사용할 수 있다.-->
		<mybatis-spring:scan base-package="com.tis.mapper"/>
		
</beans>
